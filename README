This is a RST C++11 library.

It is licensed under the Simplified BSD License.

Now the library contains the following components:

* Optional
  A lightweight analogy of Boost.optional and Option enum in Rust. It is used
  to support one more optional value for every existing type. It uses
  pointer-like semantics by overloading operator* and operator->. The object of
  the class aborts if it has not been checked.

* Result
  An analogy of Result enum in Rust. Also it is similar to Go's
  (value, error) return semantics.
  It is used as a return value of any method or function.
  The component can be helpful to support error handling without C++ exceptions.
  It uses pointer-like semantics by overloading operator* and operator->.
  A Result template class supports:
    * Result<ValueType, ErrorType>;
    * Result<void, ErrorType> - doesn't have '*' and '->' operator overloads.
  The object of the class asserts if it has been checked. So, it's impossible
 now to ignore an error.

* Logger
  A fast flexible thread-safe Logger component for C++11.

* Status
  A Google-like Status class for error handling with small improvements. It's
  impossible now to ignore an error.

* Cpp14
  A set of C++14 features unavaliable for C++11 compilers.

* Format
  A Python-like string format library

* NonCopyable
  A set of utility classes: NonCopyConstructible, NonAssignable, NonCopyable,
  NonMoveConstructible, NonMoveAssignable, NonMovable.

* Defer
  A Go-like (also a Microsoft GSL finally-like) method of deferring the
  action execution at the end of the function.

* Check
  A set of macros for better error handling.
